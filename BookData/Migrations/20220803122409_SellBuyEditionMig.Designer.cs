// <auto-generated />
using System;
using BookData;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BookData.Migrations
{
    [DbContext(typeof(BookDbContext))]
    [Migration("20220803122409_SellBuyEditionMig")]
    partial class SellBuyEditionMig
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("BookCore.Book", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int?>("BuyerId")
                        .HasColumnType("int");

                    b.Property<int>("Buyer_Id")
                        .HasColumnType("int");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Publisher")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SellerId")
                        .HasColumnType("int");

                    b.Property<int>("Seller_Id")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("BuyerId");

                    b.HasIndex("SellerId");

                    b.ToTable("Book");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Buyer_Id = 1,
                            ISBN = "111111111",
                            Publisher = "PUB 1",
                            Seller_Id = 1,
                            Title = "BOOK 1"
                        },
                        new
                        {
                            Id = 2,
                            Buyer_Id = 2,
                            ISBN = "111111111",
                            Publisher = "PUB 2",
                            Seller_Id = 2,
                            Title = "BOOK 2"
                        });
                });

            modelBuilder.Entity("BookCore.Buyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Book_Id")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Email_id")
                        .HasColumnType("int");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ship_Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Buyers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "chicago st 12",
                            Book_Id = 1,
                            City = "chicago",
                            Country = "USA",
                            Email_id = 1,
                            First_name = "jimmy",
                            Last_name = "butler",
                            Password = "butlercode",
                            Phone = "05632458",
                            Ship_Adress = "cleveland",
                            State = "chicago",
                            ZipCode = 111
                        },
                        new
                        {
                            Id = 2,
                            Adress = "minisota st 22",
                            Book_Id = 2,
                            City = "minisota",
                            Country = "USA",
                            Email_id = 2,
                            First_name = "zach",
                            Last_name = "lavin",
                            Password = "lavinecode",
                            Phone = "05688499",
                            Ship_Adress = "minisota",
                            State = "minisota",
                            ZipCode = 220
                        });
                });

            modelBuilder.Entity("BookCore.Seller", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Book_Id")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Country")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Discount")
                        .HasColumnType("int");

                    b.Property<int>("Email_id")
                        .HasColumnType("int");

                    b.Property<string>("First_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Last_name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ZipCode")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Sellers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Adress = "orelance st 22",
                            Book_Id = 1,
                            City = "orelance",
                            Country = "USA",
                            Discount = 0,
                            Email_id = 1,
                            First_name = "ball",
                            Last_name = "lanzo",
                            Password = "ballcode",
                            Phone = "05900779",
                            State = "orelance",
                            ZipCode = 112
                        },
                        new
                        {
                            Id = 2,
                            Adress = "phonex st 22",
                            Book_Id = 2,
                            City = "phonex",
                            Country = "USA",
                            Discount = 0,
                            Email_id = 2,
                            First_name = "paul",
                            Last_name = "chris",
                            Password = "chriscode",
                            Phone = "05998779",
                            State = "phonex",
                            ZipCode = 442
                        });
                });

            modelBuilder.Entity("BookCore.Book", b =>
                {
                    b.HasOne("BookCore.Buyer", null)
                        .WithMany("Books_toBuy")
                        .HasForeignKey("BuyerId");

                    b.HasOne("BookCore.Seller", null)
                        .WithMany("Books_forSell")
                        .HasForeignKey("SellerId");
                });

            modelBuilder.Entity("BookCore.Buyer", b =>
                {
                    b.Navigation("Books_toBuy");
                });

            modelBuilder.Entity("BookCore.Seller", b =>
                {
                    b.Navigation("Books_forSell");
                });
#pragma warning restore 612, 618
        }
    }
}
